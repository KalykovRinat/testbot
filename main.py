import asyncio
import logging
import re
from aiogram import Bot, Dispatcher, types, Router, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage
import config  # –§–∞–π–ª —Å TOKEN –∏ ADMIN_ID

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=config.TOKEN)
dp = Dispatcher(storage=MemoryStorage())
router = Router()

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
banned_users = set()


# –°–æ—Å—Ç–æ—è–Ω–∏—è FSM –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–Ω–∞—Ç–∞
class DonationState(StatesGroup):
    waiting_for_id_and_diamonds = State()
    waiting_for_receipt = State()


# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
async def main_menu():
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=[
            [types.KeyboardButton(text="üìú –ü—Ä–∞–π—Å")],
            [types.KeyboardButton(text="üíé –î–æ–Ω–∞—Ç"), types.KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å")]
        ],
        resize_keyboard=True
    )
    return keyboard


# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ–∫–∞
async def user_receipt_menu():
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=[
        [types.InlineKeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data="submit_receipt"),
         types.InlineKeyboardButton(text="üîÑ –ò–∑–º–µ–Ω–∏—Ç—å", callback_data="redo_donation")]
    ])
    return keyboard


# –ö–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–≤ 2 —Å—Ç—Ä–æ–∫–∏)
async def admin_buttons(user_id):
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=[
        [types.InlineKeyboardButton(text="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data=f"approve_{user_id}"),
         types.InlineKeyboardButton(text="‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ", callback_data=f"waiting_{user_id}"),
         types.InlineKeyboardButton(text="‚ùå –û—Ç–∫–∞–∑–∞–Ω–æ", callback_data=f"decline_{user_id}")],
        [types.InlineKeyboardButton(text="üö´ –ë–∞–Ω", callback_data=f"ban_{user_id}"),
         types.InlineKeyboardButton(text="üîì –†–∞–∑–±–∞–Ω", callback_data=f"unban_{user_id}"),
         types.InlineKeyboardButton(text="‚úâ –°–≤—è–∑–∞—Ç—å—Å—è", url=f"tg://user?id={user_id}")]
    ])
    return keyboard


# –ö–æ–º–∞–Ω–¥–∞ /start
@router.message(Command("start"))
async def send_welcome(message: types.Message):
    if message.from_user.id in banned_users:
        return
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø —á–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å? ", reply_markup=await main_menu())



@router.message(F.text == "üìú –ü—Ä–∞–π—Å")
async def send_price(message: types.Message):
    price_list = """–ü—Ä–∞–π—Å-–ª–∏—Å—Ç –Ω–∞ –∞–ª–º–∞–∑—ã –≤–∞–ª—é—Ç–∞ –ö—ã—Ä–≥—ã–∑—Å–∫–∏–π —Å–æ–º:

üåü–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:
‚Ä¢ –ê–ª–º–∞–∑–Ω—ã–π –ü—Ä–æ–ø—É—Å–∫ üåü ‚Äî 180üá∞üá¨
‚Ä¢ –°—É–º–µ—Ä–µ—á–Ω—ã–π –ü—Ä–æ–ø—É—Å–∫ ‚≠êÔ∏è ‚Äî 900 üá∞üá¨
‚Ä¢  78 + 8 üíé ‚Äî 150 üá∞üá¨
‚Ä¢  156 + 16 üíé ‚Äî 285 üá∞üá¨
‚Ä¢  234 + 23 üíé ‚Äî 400 üá∞üá¨
‚Ä¢  390 + 39 üíé ‚Äî 660 üá∞üá¨
‚Ä¢  625 + 81 üíé ‚Äî 1050 üá∞üá¨
‚Ä¢  781 + 97 üíé ‚Äî 1350 üá∞üá¨
‚Ä¢  1050 +121 üíé ‚Äî 1670 üá∞üá¨
‚Ä¢  1250 + 162 üíé ‚Äî 2150 üá∞üá¨
‚Ä¢  1406 + 178 üíé ‚Äî 2400 üá∞üá¨
‚Ä¢  1860 + 335 üíé ‚Äî 3320 üá∞üá¨
‚Ä¢  3099 + 589 üíé ‚Äî 5575üá∞üá¨
‚Ä¢  4649 + 883 üíé ‚Äî 8300 üá∞üá¨
‚Ä¢  7740 + 1548 üíé ‚Äî 13800 üá∞üá¨
–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –µ—â–µ –±–æ–ª—å—à–µ –∞–ª–º–∞–∑–æ–≤ üíé  –ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º!!!  """
    await message.answer(price_list)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "‚ùì –ü–æ–º–æ—â—å"
    @router.message(F.text == "‚ùì –ü–æ–º–æ—â—å")
    async def send_help(message: types.Message):
        help_text = "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É @Rikokml –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏."
        await message.answer(help_text)


# –ö–Ω–æ–ø–∫–∞ "–î–æ–Ω–∞—Ç"
@router.message(F.text == "üíé –î–æ–Ω–∞—Ç")
async def handle_donate(message: types.Message, state: FSMContext):
    if message.from_user.id in banned_users:
        return
    await message.answer(
        "Ô∏èÔ∏èÔ∏è‚ùó‚ùó‚ùó–í–∞–∂–Ω–æ ‚ùó‚ùó‚ùó\n C –Ω–∞—á–∞–ª–æ –æ–∑–Ω–∞–∫–æ–º—Ç–µ—Å—å —Å –ø—Ä–∞–π—Å–æ–º –∏ –ø–æ—Ç–æ–º \n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à ID(Server ID) \n–ü—Ä–∏–º–µ—Ä: 472387(4353) –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–ª–º–∞–∑–æ–≤\n(‚ùó‚ùó–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ –ø—Ä–æ–±–µ–ª )")
    await state.set_state(DonationState.waiting_for_id_and_diamonds)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ ID, –∑–æ–Ω—ã –∞–π–¥–∏ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∞–ª–º–∞–∑–æ–≤
@router.message(DonationState.waiting_for_id_and_diamonds, lambda message: re.match(r"^\d+\(\d+\) \d+$", message.text))
async def process_donation(message: types.Message, state: FSMContext):
    user_id_zone, diamonds = message.text.split()
    user_id = user_id_zone.split('(')[0]  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    zone_id = user_id_zone.split('(')[1][:-1]  # –ó–æ–Ω–∞ –∞–π–¥–∏ (—É–¥–∞–ª—è–µ–º –∑–∞–∫—Ä—ã–≤–∞—é—â—É—é —Å–∫–æ–±–∫—É)

    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(user_id=user_id, zone_id=zone_id, diamonds=diamonds)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –ø—Ä–∏—Å–ª–∞—Ç—å —á–µ–∫
    await message.answer("MBank:+996998202990 –†–∏–Ω–∞—Ç.–ö\nBakaiBank +996998202990  \n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞–≤–∞—à–µ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —á–µ–∫–∞")
    await state.set_state(DonationState.waiting_for_receipt)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —á–µ–∫–∞
@router.message(DonationState.waiting_for_receipt, F.photo)
async def process_receipt(message: types.Message, state: FSMContext):
    file_id = message.photo[-1].file_id
    await state.update_data(receipt=file_id)
    await message.answer(
        "–ß—Ç–æ–±—ã –º—ã –Ω–∞—á–∞–ª–∏ –≤–∞—à–∏–º –¥–æ–Ω–∞—Ç–æ–º . –ù–∞–∂–º–∏—Ç–µ \"–ì–æ—Ç–æ–≤–æ\", –µ—Å–ª–∏ –≤—Å–µ –≤–µ—Ä–Ω–æ, –∏–ª–∏ \"–ò–∑–º–µ–Ω–∏—Ç—å\", —á—Ç–æ–±—ã –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞–Ω–æ–≤–æ.",
        reply_markup=await user_receipt_menu())


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å" –∏ "–ò–∑–º–µ–Ω–∏—Ç—å"
@router.callback_query(F.data == "redo_donation")
async def redo_donation(call: types.CallbackQuery, state: FSMContext):
    await handle_donate(call.message, state)
    await call.answer()


@router.callback_query(F.data == "submit_receipt")
async def submit_receipt(call: types.CallbackQuery, state: FSMContext):
    data = await state.get_data()
    user_id = call.from_user.id
    await bot.send_photo(chat_id=config.ADMIN_ID, photo=data['receipt'],
                         caption=f"–ù–æ–≤—ã–π —á–µ–∫\nID: {data['user_id']}\n–ó–æ–Ω–∞ ID: {data['zone_id']}\n–ê–ª–º–∞–∑–æ–≤: {data['diamonds']}",
                         reply_markup=await admin_buttons(user_id))
    await call.message.answer("–ß–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
    await state.clear()
    await call.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ ID, –∑–æ–Ω—ã –∞–π–¥–∏ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∞–ª–º–∞–∑–æ–≤
@router.message(DonationState.waiting_for_id_and_diamonds)
async def process_donation(message: types.Message, state: FSMContext):
    if not re.match(r"^\d+\(\d+\) \d+$", message.text):
        await message.answer("‚ùå –û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n\n"
                             "472387(4353) 100\n(–ì–¥–µ 472387 - –≤–∞—à ID, 4353 - Server ID, 100 - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–ª–º–∞–∑–æ–≤)")
        return

    user_id_zone, diamonds = message.text.split()
    user_id = user_id_zone.split('(')[0]  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    zone_id = user_id_zone.split('(')[1][:-1]  # –ó–æ–Ω–∞ ID (—É–¥–∞–ª—è–µ–º –∑–∞–∫—Ä—ã–≤–∞—é—â—É—é —Å–∫–æ–±–∫—É)

    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(user_id=user_id, zone_id=zone_id, diamonds=diamonds)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –ø—Ä–∏—Å–ª–∞—Ç—å —á–µ–∫
    await message.answer("MBank:+996998202990 –†–∏–Ω–∞—Ç.–ö\nBakaiBank +996998202990  \n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ –≤–∞—à–µ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è (—á–µ–∫).")
    await state.set_state(DonationState.waiting_for_receipt)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
@router.callback_query()
async def admin_callback(call: types.CallbackQuery):
    user_id = int(call.data.split('_')[1])
    if call.data.startswith("approve"):
        await bot.send_message(user_id, "‚úÖ –í–∞—à–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ—Å—Ç—É–ø–∏–ª–æ –ø–æ–≤–µ—Ä—å—Ç–µ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç")
    elif call.data.startswith("decline"):
        await bot.send_message(user_id, "‚ùå –í–∞—à–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª–æ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
    elif call.data.startswith("ban"):
        banned_users.add(user_id)
        await bot.send_message(user_id, "üö´ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
    elif call.data.startswith("unban"):
        banned_users.discard(user_id)
        await bot.send_message(user_id, "üîì –í—ã –±—ã–ª–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏. –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º.")
    elif call.data.startswith("waiting"):
        await bot.send_message(user_id, "‚è≥ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–∏–Ω—è–ª –≤–∞—à–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ. –°–∫–æ—Ä–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –æ—Ç–≤–µ—Ç.")
    await call.answer()


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    dp.include_router(router)
    try:
        await dp.start_polling(bot)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")


if __name__ == "__main__":
    asyncio.run(main())
